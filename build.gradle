buildscript {
  ext.sdc_api_version = '1.2.0.0'
  ext.kotlin_version = '1.0.0'
  ext.slf4j_version = '1.7.7'
  ext.junit_version = '4.12'
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

plugins {
   id "nebula.provided-base" version "3.0.3"
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'distribution'
apply plugin: 'maven'
apply plugin: 'nebula.provided-base'

group = 'com.adamkunicki'
version = '1.0.0-SNAPSHOT'

description = """Stage library including a Kotlin Scripting processor."""

sourceCompatibility = 1.7
targetCompatibility = 1.7

distributions {
  main {
    contents {
      into('lib') {
        from(jar)
        from(project.configurations.runtime)
      }
      project.configurations.provided.dependencies.all { dep ->
        exclude("**$dep.name*")
      }
      exclude("**/log4j*.jar")
      exclude("**/metrics-core*.jar")
      eachFile { details ->
        if (details.name == jar.archiveName && !details.relativePath.toString().contains('/lib')) {
          details.exclude()
        }
      }
    }
  }
}

repositories {
  mavenCentral()
}

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  compile 'com.orbitz.consul:consul-client:0.9.16'
  // include your preferred javax.ws.rs-api implementation, for example:
  compile 'org.apache.cxf:cxf-rt-rs-client:3.0.3'
  compile 'org.apache.cxf:cxf-rt-transports-http-hc:3.0.3'
  provided "com.streamsets:streamsets-datacollector-api:$sdc_api_version"
  provided "org.slf4j:slf4j-api:$slf4j_version"
  provided "org.slf4j:slf4j-log4j12:$slf4j_version"
  testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
  testCompile "junit:junit:$junit_version"
  testCompile "org.mockito:mockito-core:1.+"
  testCompile "com.streamsets:streamsets-datacollector-sdk:$sdc_api_version"
}
